/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Play.java
 *
 * Created on May 7, 2010, 7:50:57 PM
 */

package View.PlayMode;

import Model.Building.Barrack;
import Model.Building.Blacksmith;
import Model.Building.Building;
import Model.Building.Castle;
import Model.Game.Game1;
import Model.Map.Map;
import Support.Converter;
import Support.ImageSupport;
import View.MainMenu;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.Point;
import java.awt.Transparency;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicBorders.FieldBorder;

/**
 *
 * @author user
 */
public class Play2 extends javax.swing.JFrame implements MouseListener{

    private static class CharacterSelected extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            
        }
        
    }
    /** Creates new form Play */
    public Play2(MainMenu parent, GraphicsDevice device, Map map, Vector<Integer> vrace) {
        super(device.getDefaultConfiguration());
        this.device = device;
        this.parent = parent; /* Pointed parent Window */
        this.map = map; /* init map */
        this.game = new Game1(map, vrace);
        initComponents();
        ShowWindow();
        InitMap();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerComboBox = new javax.swing.JComboBox();
        layerpane = new javax.swing.JLayeredPane();
        scrollPane = new javax.swing.JScrollPane();
        mapLayerPane = new javax.swing.JLayeredPane();
        terrainPanel = new javax.swing.JPanel();
        buildingPanel = new javax.swing.JPanel();
        warnaPanel = new javax.swing.JPanel();
        karakterPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        info_and_menuPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        barrackButton = new javax.swing.JButton();
        bcButton = new javax.swing.JButton();
        endTurnButton = new javax.swing.JButton();
        surrenderButton = new javax.swing.JButton();
        listPlayerPanel = new javax.swing.JPanel();
        listButton = new javax.swing.JButton();
        listinnerPannel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listcharacterTextArea = new javax.swing.JTextArea();
        listPlayerLabel = new javax.swing.JLabel();
        actioncharacterPanel = new javax.swing.JPanel();
        attackButton = new javax.swing.JButton();
        moveButton = new javax.swing.JButton();
        specialButton = new javax.swing.JButton();
        waitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        upgradecharacterPanel = new javax.swing.JPanel();
        upgradejobButton = new javax.swing.JButton();
        upgradestatusButton = new javax.swing.JButton();
        buildingactionPanel = new javax.swing.JPanel();
        summonCharacterButton = new javax.swing.JButton();
        upgradeBuldingButton = new javax.swing.JButton();

        playerComboBox.setFont(new java.awt.Font("Tahoma", 0, 18));
        playerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        playerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerComboBoxActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dunno");
        setResizable(false);
        setUndecorated(true);

        layerpane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        mapLayerPane.setBackground(new java.awt.Color(0, 0, 0));
        mapLayerPane.setOpaque(true);
        mapLayerPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mapLayerPaneMousePressed(evt);
            }
        });

        terrainPanel.setOpaque(false);

        javax.swing.GroupLayout terrainPanelLayout = new javax.swing.GroupLayout(terrainPanel);
        terrainPanel.setLayout(terrainPanelLayout);
        terrainPanelLayout.setHorizontalGroup(
            terrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        terrainPanelLayout.setVerticalGroup(
            terrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        terrainPanel.setBounds(30, 80, -1, -1);
        mapLayerPane.add(terrainPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buildingPanel.setOpaque(false);

        javax.swing.GroupLayout buildingPanelLayout = new javax.swing.GroupLayout(buildingPanel);
        buildingPanel.setLayout(buildingPanelLayout);
        buildingPanelLayout.setHorizontalGroup(
            buildingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        buildingPanelLayout.setVerticalGroup(
            buildingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        buildingPanel.setBounds(280, 80, -1, -1);
        mapLayerPane.add(buildingPanel, new Integer(2));

        warnaPanel.setOpaque(false);

        javax.swing.GroupLayout warnaPanelLayout = new javax.swing.GroupLayout(warnaPanel);
        warnaPanel.setLayout(warnaPanelLayout);
        warnaPanelLayout.setHorizontalGroup(
            warnaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        warnaPanelLayout.setVerticalGroup(
            warnaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        warnaPanel.setBounds(150, 80, -1, -1);
        mapLayerPane.add(warnaPanel, new Integer(1));

        karakterPanel.setOpaque(false);

        javax.swing.GroupLayout karakterPanelLayout = new javax.swing.GroupLayout(karakterPanel);
        karakterPanel.setLayout(karakterPanelLayout);
        karakterPanelLayout.setHorizontalGroup(
            karakterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        karakterPanelLayout.setVerticalGroup(
            karakterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        karakterPanel.setBounds(420, 80, -1, -1);
        mapLayerPane.add(karakterPanel, new Integer(3));

        scrollPane.setViewportView(mapLayerPane);

        scrollPane.setBounds(0, 10, 730, 480);
        layerpane.add(scrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        menuPanel.setOpaque(false);

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        saveButton.setText("Save Game");
        saveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveButtonKeyPressed(evt);
            }
        });

        closeButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(closeButton))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        menuPanel.setBounds(0, 0, 256, 46);
        layerpane.add(menuPanel, new Integer(1));

        info_and_menuPanel.setAlignmentX(0.0F);
        info_and_menuPanel.setAlignmentY(0.0F);
        info_and_menuPanel.setOpaque(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Info"));

        infoTextArea.setColumns(20);
        infoTextArea.setRows(5);
        jScrollPane2.setViewportView(infoTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Build"));

        barrackButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        barrackButton.setText("B");
        barrackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barrackButtonMousePressed(evt);
            }
        });

        bcButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        bcButton.setText("BC");
        bcButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bcButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(barrackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bcButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(barrackButton)
                .addComponent(bcButton))
        );

        endTurnButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        endTurnButton.setText("End Turn");
        endTurnButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                endTurnButtonMousePressed(evt);
            }
        });

        surrenderButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        surrenderButton.setText("Surrender");

        javax.swing.GroupLayout info_and_menuPanelLayout = new javax.swing.GroupLayout(info_and_menuPanel);
        info_and_menuPanel.setLayout(info_and_menuPanelLayout);
        info_and_menuPanelLayout.setHorizontalGroup(
            info_and_menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(info_and_menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(info_and_menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(endTurnButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(surrenderButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        info_and_menuPanelLayout.setVerticalGroup(
            info_and_menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(info_and_menuPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endTurnButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(surrenderButton)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        info_and_menuPanel.setBounds(10, 360, 188, 306);
        layerpane.add(info_and_menuPanel, new Integer(1));

        listPlayerPanel.setOpaque(false);

        listButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        listButton.setText("L");
        listButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listButtonActionPerformed(evt);
            }
        });

        listinnerPannel.setOpaque(false);

        listcharacterTextArea.setColumns(20);
        listcharacterTextArea.setRows(5);
        jScrollPane1.setViewportView(listcharacterTextArea);

        listPlayerLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        listPlayerLabel.setForeground(new java.awt.Color(255, 255, 255));
        listPlayerLabel.setText("List Player :");

        javax.swing.GroupLayout listinnerPannelLayout = new javax.swing.GroupLayout(listinnerPannel);
        listinnerPannel.setLayout(listinnerPannelLayout);
        listinnerPannelLayout.setHorizontalGroup(
            listinnerPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listinnerPannelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(listinnerPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listPlayerLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        listinnerPannelLayout.setVerticalGroup(
            listinnerPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listinnerPannelLayout.createSequentialGroup()
                .addComponent(listPlayerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout listPlayerPanelLayout = new javax.swing.GroupLayout(listPlayerPanel);
        listPlayerPanel.setLayout(listPlayerPanelLayout);
        listPlayerPanelLayout.setHorizontalGroup(
            listPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPlayerPanelLayout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(listButton))
            .addComponent(listinnerPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        listPlayerPanelLayout.setVerticalGroup(
            listPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPlayerPanelLayout.createSequentialGroup()
                .addComponent(listButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listinnerPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        listPlayerPanel.setBounds(740, 20, 200, 309);
        layerpane.add(listPlayerPanel, new Integer(1));

        actioncharacterPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        actioncharacterPanel.setOpaque(false);
        actioncharacterPanel.setPreferredSize(new java.awt.Dimension(125, 185));

        attackButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        attackButton.setText("Attack");
        attackButton.setAlignmentY(0.0F);

        moveButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        moveButton.setText("Move");
        moveButton.setAlignmentY(0.0F);
        moveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveButtonActionPerformed(evt);
            }
        });

        specialButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        specialButton.setText("Special");
        specialButton.setAlignmentY(0.0F);

        waitButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        waitButton.setText("Wait");
        waitButton.setAlignmentY(0.0F);
        waitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        cancelButton.setText("Cancel");
        cancelButton.setAlignmentY(0.0F);

        javax.swing.GroupLayout actioncharacterPanelLayout = new javax.swing.GroupLayout(actioncharacterPanel);
        actioncharacterPanel.setLayout(actioncharacterPanelLayout);
        actioncharacterPanelLayout.setHorizontalGroup(
            actioncharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actioncharacterPanelLayout.createSequentialGroup()
                .addComponent(specialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actioncharacterPanelLayout.createSequentialGroup()
                .addGroup(actioncharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actioncharacterPanelLayout.createSequentialGroup()
                .addGroup(actioncharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(attackButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        actioncharacterPanelLayout.setVerticalGroup(
            actioncharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actioncharacterPanelLayout.createSequentialGroup()
                .addComponent(attackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(moveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specialButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(waitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addGap(12, 12, 12))
        );

        actioncharacterPanel.setBounds(770, 400, 125, 185);
        layerpane.add(actioncharacterPanel, new Integer(1));

        upgradecharacterPanel.setOpaque(false);

        upgradejobButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        upgradejobButton.setText("Upgrade Job");
        upgradejobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradejobButtonActionPerformed(evt);
            }
        });

        upgradestatusButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        upgradestatusButton.setText("Upgrade Status");

        javax.swing.GroupLayout upgradecharacterPanelLayout = new javax.swing.GroupLayout(upgradecharacterPanel);
        upgradecharacterPanel.setLayout(upgradecharacterPanelLayout);
        upgradecharacterPanelLayout.setHorizontalGroup(
            upgradecharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upgradecharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(upgradejobButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(upgradestatusButton, javax.swing.GroupLayout.Alignment.TRAILING))
        );
        upgradecharacterPanelLayout.setVerticalGroup(
            upgradecharacterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upgradecharacterPanelLayout.createSequentialGroup()
                .addComponent(upgradejobButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upgradestatusButton))
        );

        upgradecharacterPanel.setBounds(290, 540, 153, 68);
        layerpane.add(upgradecharacterPanel, new Integer(1));

        buildingactionPanel.setOpaque(false);

        summonCharacterButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        summonCharacterButton.setText("Summon Character");
        summonCharacterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                summonCharacterButtonMousePressed(evt);
            }
        });

        upgradeBuldingButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        upgradeBuldingButton.setText("Upgrade Building");

        javax.swing.GroupLayout buildingactionPanelLayout = new javax.swing.GroupLayout(buildingactionPanel);
        buildingactionPanel.setLayout(buildingactionPanelLayout);
        buildingactionPanelLayout.setHorizontalGroup(
            buildingactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(upgradeBuldingButton, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
            .addComponent(summonCharacterButton, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
        );
        buildingactionPanelLayout.setVerticalGroup(
            buildingactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buildingactionPanelLayout.createSequentialGroup()
                .addComponent(summonCharacterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upgradeBuldingButton))
        );

        buildingactionPanel.setBounds(470, 600, 187, 68);
        layerpane.add(buildingactionPanel, new Integer(1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(layerpane, javax.swing.GroupLayout.PREFERRED_SIZE, 953, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(274, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(layerpane, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void waitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waitButtonActionPerformed

    private void upgradejobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradejobButtonActionPerformed
        JLabel l=selectedchar;
        Point p = l.getLocation();
        Point pGrid = Converter.PointToGrid(p);
        int x = pGrid.x;
        int y = pGrid.y;
        String s;

        Model.Character.Character c = game.getCharacters().get(x, y);
        c.JobChange(2);
        s = Integer.toString(c.GetAtribut().GetRaceID());
        s += Integer.toString(2);
        l.setIcon(ImageSupport.createImageIcon(s+".png", null));
    }//GEN-LAST:event_upgradejobButtonActionPerformed

    private void playerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerComboBoxActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        parent.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listButtonActionPerformed
       list = !list;
       listinnerPannel.setVisible(list);
    }//GEN-LAST:event_listButtonActionPerformed

    private void mapLayerPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapLayerPaneMousePressed
        Component c = terrainPanel.getComponentAt(evt.getX(), evt.getY());
        JLabel l;

        disableAllActionPanel();
        if (c instanceof JLabel) {
            l = (JLabel) c;
            if (selectedterrain!=null) {
                selectedterrain.setBorder(null);
            }
            l.setBorder(new FieldBorder(Color.BLACK, Color.BLACK, Color.BLACK, Color.BLACK));
            selectedterrain = l;
        } else {
            return;
        }
    }//GEN-LAST:event_mapLayerPaneMousePressed

    private void moveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveButtonActionPerformed
        Model.Character.Character c;
        
        Point p = Converter.PointToGrid(selectedchar.getX(), selectedchar.getY());
        c = game.getCharacters().get(p.x, p.y);
        game.getCharactermap()[p.x][p.y] = 0;
        p.y++;
        c.Move(p.x, p.y);
        game.getCharactermap()[p.x][p.y] = c.GetAtribut().GetCharID();
        p = Converter.GridToPoint(p);
        Thread t = new Thread(new Runnable() {
            public void run() {
                Point p = selectedchar.getLocation();
                for (int i=1;i<=50;++i) {
                    selectedchar.setLocation(p.x, p.y+i);
                    try{
                        Thread.sleep(20);
                    } catch (InterruptedException e){
                        
                    }
                }
            }
        });
        t.start();
        
    }//GEN-LAST:event_moveButtonActionPerformed

    private void summonCharacterButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_summonCharacterButtonMousePressed
        /* check if barrack is selected */
        Point p = selectedbuilding .getLocation();
        Point pGrid = Converter.PointToGrid(p);
        int x = pGrid.x;
        int y = pGrid.y;

        Building b = game.getMap().GetBuilding(x, y);
        if (!(b instanceof Barrack))
            return;
        
        /* Character is on building? -> can't summon if there is character on barrack */
        Model.Character.Character c= game.getCharacters().get(x, y);
        if (c!=null)
            return;

        int player = game.getPlayerturn();
        int RaceID = game.getVrace().get(player-1);
        c = new Model.Character.Character(RaceID, player);
        c.GetAtribut().SetPositionXY(x, y);
        game.getCharactermap()[x][y] = c.GetAtribut().GetCharID();
        game.getCharacters().add(c);

        InitMap();
    }//GEN-LAST:event_summonCharacterButtonMousePressed

    private void endTurnButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endTurnButtonMousePressed
        int n= game.getPlayerturn();
        n%=4;
        ++n;
        game.setPlayerturn(n);
        infoTextArea.setText("Player "+Integer.toString(n));
    }//GEN-LAST:event_endTurnButtonMousePressed

    private void barrackButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barrackButtonMousePressed
        /* Check selected grid -> can't build if there is no grid selected */
        if (selectedterrain==null)
            return;
        
        /* Check Money -> can't build if no enaugh money */

        /* Check terrain -> can't build on water and mud */
        Point p = selectedterrain.getLocation();
        Point pGrid = Converter.PointToGrid(p);
        int t = game.getMap().GetTerrain(pGrid.x, pGrid.y);
        if (t == Map.AIR || t == Map.LUMPUR)
            return;

        /* Check Building -> can't build if there is a building */
        Building b = game.getMap().GetBuilding(pGrid.x, pGrid.y);
        if (b!=null)
            return;

        /* Check character -> can't build if there is a character*/
        Model.Character.Character c = game.getCharacters().get(pGrid.x, pGrid.y);
        if (c!=null)
            return;

        game.getMap().SetBuilding(Map.BARRACK, game.getPlayerturn(), pGrid.x, pGrid.y, 0, 0);
        InitMap();
    }//GEN-LAST:event_barrackButtonMousePressed

    private void bcButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcButtonMousePressed
        /* Check selected grid -> can't build if there is no grid selected */
        if (selectedterrain==null)
            return;

        /* Check Money -> can't build if no enaugh money */

        /* Check terrain -> can't build on water and mud */
        Point p = selectedterrain.getLocation();
        Point pGrid = Converter.PointToGrid(p);
        int t = game.getMap().GetTerrain(pGrid.x, pGrid.y);
        if (t == Map.AIR || t == Map.LUMPUR)
            return;

        /* Check Building -> can't build if there is a building */
        Building b = game.getMap().GetBuilding(pGrid.x, pGrid.y);
        if (b!=null)
            return;

        /* Check character -> can't build if there is a character*/
        Model.Character.Character c = game.getCharacters().get(pGrid.x, pGrid.y);
        if (c!=null)
            return;

        game.getMap().SetBuilding(Map.BLACKSMITH, game.getPlayerturn(), pGrid.x, pGrid.y, 0, 0);
        InitMap();
    }//GEN-LAST:event_bcButtonMousePressed

    private void saveButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveButtonKeyPressed
        
    }//GEN-LAST:event_saveButtonKeyPressed

    private void isCanBuild(){
        
    }

    public void createContent(int x, int y, int width, int height, String iconName, JPanel p) {
        Component c =  p.getComponentAt(x, y);
        if (c!=null) {
            p.remove(c);
        }
        JLabel label;
        label = new JLabel(ImageSupport.createImageIcon(iconName+".png", null));
        label.setBounds(x, y, width, height);
        p.add(label);
        if (p == karakterPanel) {
            label.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent e) {
                    disableAllActionPanel();
                    JLabel l = (JLabel)e.getSource();
                    int x = l.getX();
                    int y = l.getY();
                    Point p = Converter.PointToGrid(x, y);
                    Model.Character.Character c = game.getCharacters().get(p.x, p.y);
                    if (c.getPlayer() == game.getPlayerturn()) {
                        actioncharacterPanel.setVisible(true);
                        if (game.getMap().GetBuildings().IsBlackSmithIn(game.getPlayerturn()))
                            upgradecharacterPanel.setVisible(true);
                        selectedchar = (JLabel)e.getSource();
                    }
                }
            });
        }

        if (p == buildingPanel) {
            label.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent e) {
                    disableAllActionPanel();
                    summonCharacterButton.setVisible(false);
                    JLabel l = (JLabel)e.getSource();
                    int x = l.getX();
                    int y = l.getY();
                    Point p = Converter.PointToGrid(x, y);
                    Building b = game.getMap().GetBuildings().get(p.x, p.y);
                    String s = infoTextArea.getText();
                    s += b.toString();
                    infoTextArea.setText(s);
                    if (b.getBuilding_BaseAtribut(b.BUILDING_PLAYER_IDX)==game.getPlayerturn()) {
                        buildingactionPanel.setVisible(true);
                        selectedbuilding = (JLabel)e.getSource();

                        if (b instanceof Barrack) {
                            summonCharacterButton.setVisible(true);
                        }
                    }
                }

            });
        }
    }

    private void InitMap() {
        /* Add new component(terrain & building ) in content Panel */
        int x,y,width,height;
        String image;
        String s =  new String();
        Building b;
        Model.Character.Character c;
        for (int i=0;i<map.GetWidth();++i) {
            for (int j=0;j<map.GetHeight();++j) {
                x = i*ImageSupport.IMAGE_WIDTH;
                y = j*ImageSupport.IMAGE_HEIGHT;
                width = ImageSupport.IMAGE_WIDTH;
                height = ImageSupport.IMAGE_HEIGHT;

                /* paint terrain */
                image = Map.GetString(map.GetTerrain(i, j));
                createContent(x, y, width, height, image, terrainPanel);

                /* paint building */
                b = map.GetBuilding(i, j);
                if (b!=null) {
                    if (b instanceof Castle) {
                        s = Building.CASTLE_S;
                    } else if (b instanceof Barrack) {
                        s = Building.BARRACK_S;
                    } else if (b instanceof Blacksmith) {
                        s = Building.BLACKSMITH_S;
                    }
                    s+=Integer.toString(b.getBuilding_BaseAtribut(b.BUILDING_PLAYER_IDX));
                    createContent(x, y, width, height, s, buildingPanel);
                }

                /* paint character */
                c = game.getCharacters().get(i, j);
                if (c!=null) {
                    s = Integer.toString(c.GetAtribut().GetRaceID());
                    s += Integer.toString(c.GetAtribut().GetJobID());
                    createContent(x, y, width, height, s, karakterPanel);
                }
            }
        }
        terrainPanel.repaint();
        buildingPanel.repaint();
        karakterPanel.repaint();

        /* Set new Size for contentPanel */
        Dimension d = new Dimension(ImageSupport.IMAGE_WIDTH*map.GetWidth(), ImageSupport.IMAGE_HEIGHT*map.GetHeight());
        terrainPanel.setBounds(0, 0, d.width, d.height);
        buildingPanel.setBounds(0, 0, d.width, d.height);
        karakterPanel.setBounds(0, 0, d.width, d.height);
        if (d.width<2000) {
            d = new Dimension(2000, 2000);
        }
        mapLayerPane.setPreferredSize(d);
    }

    private void ShowWindow()
    {
        Container pane = getContentPane();
        int x, y, width, height;
        int border = BORDER_MAIN_LAYER_PANE;
        
        boolean isFullScreen;
        isFullScreen = device.isFullScreenSupported();
        //setUndecorated(isFullScreen);
        setResizable(!isFullScreen);

        if (isFullScreen) {
            /* Full-screen mode */
            device.setFullScreenWindow(this);
            validate();
        } else {
            /* Windowed mode */
            pack();
            setVisible(true);
        }

        pane.setBackground(Color.BLACK);

        /* add layerpane to Frame */
        pane.removeAll();
        pane.setLayout(null);
        pane.add(layerpane);
        layerpane.setBounds(border, border, getWidth()-(2*border), getHeight()-(2*border));

        /* set layerpane's layout to null */
        layerpane.setLayout(null);

        /* set bounds  scrollpane */
        width = layerpane.getWidth();
        height = layerpane.getHeight();
        scrollPane.setBounds(0, 0, width, height);

        /* set bounds menuPanel */
        width = menuPanel.getPreferredSize().width;
        height = menuPanel.getPreferredSize().height;
        menuPanel.setBounds(0, 0, width, height);

        /* set bounds listPlayePanel */
        width = listPlayerPanel.getPreferredSize().width;
        height = listPlayerPanel.getPreferredSize().height;
        x = layerpane.getWidth()-width;
        y = 0;
        listPlayerPanel.setBounds(x, y, width, height);

        /* set bounds info_and_mainPanel */
        width = info_and_menuPanel.getPreferredSize().width;
        height = info_and_menuPanel.getPreferredSize().height;
        x = 0;
        y = layerpane.getHeight()-height;
        info_and_menuPanel.setBounds(x, y, width, height);

        /* set bounds actioncharacterpanel */
        width = actioncharacterPanel.getWidth();
        height = actioncharacterPanel.getHeight();
        x = layerpane.getWidth()- width - 20;
        y = layerpane.getHeight() - height - 20;
        actioncharacterPanel.setBounds(x, y, width, height);

        /* set bounds updgradecharacterpanel */
        width = upgradecharacterPanel.getPreferredSize().width;
        height = upgradecharacterPanel.getPreferredSize().height;
        x = actioncharacterPanel.getX() - width;
        y = layerpane.getHeight() - height - 20;
        upgradecharacterPanel.setBounds(x, y, width, height);

        /* set bounds */
        width = buildingactionPanel.getPreferredSize().width;
        height = buildingactionPanel.getPreferredSize().height;
        x = upgradecharacterPanel.getX() - width;
        y = layerpane.getHeight() - height - 20;
        buildingactionPanel.setBounds(x, y, width, height);

        /* scroll */
        scrollPane.setBackground(Color.black);
        scrollPane.setOpaque(false);
        
        disableAllActionPanel();
    }

    private void disableAllActionPanel(){
        actioncharacterPanel.setVisible(false);
        upgradecharacterPanel.setVisible(false);
        buildingactionPanel.setVisible(false);
    }

    public void mouseClicked(MouseEvent e) {}

    public void mouseEntered(MouseEvent e) {}

    public void mouseExited(MouseEvent e) {}

    public void mousePressed(MouseEvent e) {}

    public void mouseReleased(MouseEvent e) {}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actioncharacterPanel;
    private javax.swing.JButton attackButton;
    private javax.swing.JButton barrackButton;
    private javax.swing.JButton bcButton;
    private javax.swing.JPanel buildingPanel;
    private javax.swing.JPanel buildingactionPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton endTurnButton;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JPanel info_and_menuPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel karakterPanel;
    private javax.swing.JLayeredPane layerpane;
    private javax.swing.JButton listButton;
    private javax.swing.JLabel listPlayerLabel;
    private javax.swing.JPanel listPlayerPanel;
    private javax.swing.JTextArea listcharacterTextArea;
    private javax.swing.JPanel listinnerPannel;
    private javax.swing.JLayeredPane mapLayerPane;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JButton moveButton;
    private javax.swing.JComboBox playerComboBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton specialButton;
    private javax.swing.JButton summonCharacterButton;
    private javax.swing.JButton surrenderButton;
    private javax.swing.JPanel terrainPanel;
    private javax.swing.JButton upgradeBuldingButton;
    private javax.swing.JPanel upgradecharacterPanel;
    private javax.swing.JButton upgradejobButton;
    private javax.swing.JButton upgradestatusButton;
    private javax.swing.JButton waitButton;
    private javax.swing.JPanel warnaPanel;
    // End of variables declaration//GEN-END:variables
    private GraphicsDevice device;
    private MainMenu parent;
    public static final int BORDER_MAIN_LAYER_PANE = 5;
    private boolean list = true;
    private Map map;
    private Game1 game;
    private JLabel selectedterrain;
    private JLabel selectedchar;
    private JLabel selectedbuilding;
}
