/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BuildMap.java
 *
 * Created on May 8, 2010, 7:24:43 AM
 */

package View.BuildMode;

import Model.Map.Map;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.plaf.basic.BasicBorders.FieldBorder;
import Support.*;
import View.MainMenu;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.Point;
import java.awt.event.KeyListener;
import java.awt.event.MouseMotionListener;

/**
 *
 * @author user
 */
public class BuildMap extends javax.swing.JFrame implements MouseListener, MouseMotionListener, KeyListener, ActionListener{

    /** Creates new form BuildMap */
    public BuildMap(MainMenu parent, GraphicsDevice device) {
        super(device.getDefaultConfiguration());
        this.device = device;
        this.parent = parent; /* Pointed parent Window */
        initComponents();

        /* Initial Map */
        mapLogic = new Map(); /* Create map by default */
        paintMap(); /* Paint Map */

        ShowWindow();

        /* Add key listener */
        this.addKeyListener(this);
        layerpane.addKeyListener(this);

        /* Add Mouse Listener */
        contentPanel.addMouseListener(this);
        contentPanel.addMouseMotionListener(this);

        /* Add Action Listener */
        rumputButton.addActionListener(this);
        airButton.addActionListener(this);
        lumpurButton.addActionListener(this);
        pohonButton.addActionListener(this);
        castle1Button.addActionListener(this);
        castle2Button.addActionListener(this);
        castle3Button.addActionListener(this);
        castle4Button.addActionListener(this);

        /* Set Action Command Name */
        rumputButton.setActionCommand(Map.GetString(Map.RUMPUT));
        airButton.setActionCommand(Map.GetString(Map.AIR));
        lumpurButton.setActionCommand(Map.GetString(Map.LUMPUR));
        pohonButton.setActionCommand(Map.GetString(Map.POHON));
        castle1Button.setActionCommand(Map.GetString(Map.CASTLE1));
        castle2Button.setActionCommand(Map.GetString(Map.CASTLE2));
        castle3Button.setActionCommand(Map.GetString(Map.CASTLE3));
        castle4Button.setActionCommand(Map.GetString(Map.CASTLE4));

        /* Init save panel */
        save = new SaveMapPanel(this);
        layerpane.add(save);
        layerpane.setLayer(save, PANEL_LAYER);
        int width = save.getPreferredSize().width;
        int height = save.getPreferredSize().height;
        int x = (getWidth()-width)/2;
        int y = (getHeight()-height)/2;
        save.setBounds(x, y, width, height);
        save.setVisible(false);

        /* Init load panel */
        load = new LoadMapPanel(this);
        layerpane.add(load);
        layerpane.setLayer(load, PANEL_LAYER);
        width = load.getPreferredSize().width;
        height = load.getPreferredSize().height;
        x = (getWidth()-width)/2;
        y = (getHeight()-height)/2;
        load.setBounds(x, y, width, height);
        load.setVisible(false);


        /* Init New Panel */
        New = new NewPanel(this);
        layerpane.add(New);
        layerpane.setLayer(New, PANEL_LAYER);
        width = New.getPreferredSize().width;
        height = New.getPreferredSize().height;
        x = (getWidth()-width)/2;
        y = (getHeight()-height)/2;
        New.setBounds(x, y, width, height);
        New.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layerpane = new javax.swing.JLayeredPane();
        changeterrainPanel = new javax.swing.JPanel();
        airButton = new javax.swing.JButton();
        pohonButton = new javax.swing.JButton();
        lumpurButton = new javax.swing.JButton();
        rumputButton = new javax.swing.JButton();
        castle1Button = new javax.swing.JButton();
        castle3Button = new javax.swing.JButton();
        castle2Button = new javax.swing.JButton();
        castle4Button = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        deselectButton = new javax.swing.JButton();
        randomButton = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        Load = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        contentPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Build Mode");
        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.black);

        layerpane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                layerpaneKeyPressed(evt);
            }
        });

        changeterrainPanel.setOpaque(false);

        airButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/air.png"))); // NOI18N
        airButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        airButton.setMaximumSize(new java.awt.Dimension(60, 60));
        airButton.setMinimumSize(new java.awt.Dimension(60, 60));
        airButton.setOpaque(false);
        airButton.setPreferredSize(new java.awt.Dimension(60, 60));

        pohonButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pohon.png"))); // NOI18N
        pohonButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        pohonButton.setMaximumSize(new java.awt.Dimension(60, 60));
        pohonButton.setMinimumSize(new java.awt.Dimension(60, 60));
        pohonButton.setOpaque(false);
        pohonButton.setPreferredSize(new java.awt.Dimension(60, 60));

        lumpurButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/lumpur.png"))); // NOI18N
        lumpurButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        lumpurButton.setMaximumSize(new java.awt.Dimension(60, 60));
        lumpurButton.setMinimumSize(new java.awt.Dimension(60, 60));
        lumpurButton.setOpaque(false);
        lumpurButton.setPreferredSize(new java.awt.Dimension(60, 60));

        rumputButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/rumput.png"))); // NOI18N
        rumputButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rumputButton.setMaximumSize(new java.awt.Dimension(60, 60));
        rumputButton.setMinimumSize(new java.awt.Dimension(60, 60));
        rumputButton.setOpaque(false);
        rumputButton.setPreferredSize(new java.awt.Dimension(60, 60));

        castle1Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/castle1.png"))); // NOI18N
        castle1Button.setMaximumSize(new java.awt.Dimension(60, 60));
        castle1Button.setMinimumSize(new java.awt.Dimension(60, 60));
        castle1Button.setOpaque(false);
        castle1Button.setPreferredSize(new java.awt.Dimension(60, 60));

        castle3Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/castle3.png"))); // NOI18N
        castle3Button.setMaximumSize(new java.awt.Dimension(60, 60));
        castle3Button.setMinimumSize(new java.awt.Dimension(60, 60));
        castle3Button.setOpaque(false);
        castle3Button.setPreferredSize(new java.awt.Dimension(60, 60));

        castle2Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/castle2.png"))); // NOI18N
        castle2Button.setMaximumSize(new java.awt.Dimension(60, 60));
        castle2Button.setMinimumSize(new java.awt.Dimension(60, 60));
        castle2Button.setOpaque(false);
        castle2Button.setPreferredSize(new java.awt.Dimension(60, 60));

        castle4Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/castle4.png"))); // NOI18N
        castle4Button.setMaximumSize(new java.awt.Dimension(60, 60));
        castle4Button.setMinimumSize(new java.awt.Dimension(60, 60));
        castle4Button.setOpaque(false);
        castle4Button.setPreferredSize(new java.awt.Dimension(60, 60));

        selectAllButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        selectAllButton.setText("Select All");
        selectAllButton.setOpaque(false);
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        deselectButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        deselectButton.setText("Deselect");
        deselectButton.setOpaque(false);
        deselectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deselectButtonActionPerformed(evt);
            }
        });

        randomButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        randomButton.setText("Random");
        randomButton.setMaximumSize(new java.awt.Dimension(72, 23));
        randomButton.setMinimumSize(new java.awt.Dimension(72, 23));
        randomButton.setOpaque(false);
        randomButton.setPreferredSize(new java.awt.Dimension(72, 23));
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        buttonPanel.setOpaque(false);

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        saveButton.setText("Save");
        saveButton.setOpaque(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        backButton.setText("Back");
        backButton.setOpaque(false);
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        newButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        newButton.setText("New");
        newButton.setOpaque(false);
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        Load.setFont(new java.awt.Font("Tahoma", 0, 18));
        Load.setText("Load");
        Load.setOpaque(false);
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(Load, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(newButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout changeterrainPanelLayout = new javax.swing.GroupLayout(changeterrainPanel);
        changeterrainPanel.setLayout(changeterrainPanelLayout);
        changeterrainPanelLayout.setHorizontalGroup(
            changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeterrainPanelLayout.createSequentialGroup()
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changeterrainPanelLayout.createSequentialGroup()
                        .addComponent(airButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lumpurButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(castle1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(castle2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changeterrainPanelLayout.createSequentialGroup()
                        .addComponent(pohonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rumputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(castle3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(castle4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(randomButton, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(selectAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deselectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                .addContainerGap())
        );
        changeterrainPanelLayout.setVerticalGroup(
            changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeterrainPanelLayout.createSequentialGroup()
                .addGroup(changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changeterrainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(changeterrainPanelLayout.createSequentialGroup()
                                .addComponent(selectAllButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deselectButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(randomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(changeterrainPanelLayout.createSequentialGroup()
                                .addGroup(changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(castle1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lumpurButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(castle2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(airButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(changeterrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pohonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rumputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(castle3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(castle4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        changeterrainPanel.setBounds(0, 440, 528, 180);
        layerpane.add(changeterrainPanel, new Integer(1));

        scroll.setBackground(new java.awt.Color(0, 0, 0));

        contentPanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 688, Short.MAX_VALUE)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 618, Short.MAX_VALUE)
        );

        scroll.setViewportView(contentPanel);

        scroll.setBounds(0, 0, 680, 620);
        layerpane.add(scroll, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layerpane, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layerpane, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        parent.setVisible(true) /* Show parent Window */;
        this.dispose(); /* Close this window */
    }//GEN-LAST:event_backButtonMouseClicked

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        getScroll().setVisible(false);
        changeterrainPanel.setVisible(false);
        New.setVisible(true);
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        /* Save Map */
        scroll.setVisible(false);
        changeterrainPanel.setVisible(false);
        save.setVisible(true);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
        /* Create & Show LoadMap Window */
        scroll.setVisible(false);
        changeterrainPanel.setVisible(false);
        load.setVisible(true);
    }//GEN-LAST:event_LoadActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        /* Get All Component in contentPanel */
        Component[] list = getContentPanel().getComponents();

        JLabel l;

        /* Clear All selected Label */
        selected.clear();

        /* Select All Map components */
        for (int i=0;i<list.length;++i) {
            l = (JLabel)list[i];
            l.setBorder(new FieldBorder(Color.BLACK, Color.BLACK, Color.BLACK, Color.BLACK)); /* Set border for Label l */

            /* Add l to selected List */
            selected.add(l);
        }
    }//GEN-LAST:event_selectAllButtonActionPerformed

    private void deselectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deselectButtonActionPerformed
        JLabel l;

        for (int i=0;i<selected.size();++i) {
            l = selected.get(i);
            l.setBorder(null); /* Erase Border */
        }

        /* Clear selected */
        selected.clear();
    }//GEN-LAST:event_deselectButtonActionPerformed

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        /* Random */
        mapLogic.SetMapRandom();

        /* Repaint */
        paintMap();
    }//GEN-LAST:event_randomButtonActionPerformed

    private void layerpaneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_layerpaneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_layerpaneKeyPressed

    public void mouseClicked(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {}

    public void mouseExited(MouseEvent e) {}

    public void mousePressed(MouseEvent e) {
         /* Get Component at mouse click's position */
        
        Component c = getContentPanel().getComponentAt(e.getX(), e.getY());
        /* Create temporary label*/
        JLabel l;


        if (c instanceof JLabel) { /* Cek c is a Label */
             l = (JLabel)c; /* l point to c */

             /* Cek if l is selected */
            if (selected.contains(l)) { /* Cek is selected */
                l.setBorder(null); /* Erase border */
                selected.remove(l); /* Remove Label l from selected List */
            } else { /* Cek is not yet selected */
                l.setBorder(new FieldBorder(Color.BLACK, Color.BLACK, Color.BLACK, Color.BLACK)); /* Set border for Label l */
                selected.add(l); /* Add Label l to selected List */
            }
        } else { /* c isn't a Label */
            return;
        }
    }

    public void mouseReleased(MouseEvent e) {}

    public void mouseDragged(MouseEvent e) {
        /* Get Label at mouse dragged's point */
        Component c = getContentPanel().getComponentAt(e.getX(), e.getY());
        JLabel l;

        if (c instanceof JLabel) {
            l = (JLabel)c;
            if (!selected.contains(l)) { /* l is not yet selected */
                l.setBorder(new FieldBorder(Color.BLACK, Color.BLACK, Color.BLACK, Color.BLACK)); /* Set border for Label l */
                selected.add(l);
            }
        }
    }

    public void mouseMoved(MouseEvent e) {}

    public void keyPressed(KeyEvent e) {
        System.out.println("press");
        System.out.println(e.getKeyChar());
        System.out.println(e);
    }

    public void keyReleased(KeyEvent e) {
        System.out.println("release");
        System.out.println(e.getKeyChar());
        System.out.println(e);
    }

    public void keyTyped(KeyEvent e) {
        System.out.println("type");
        System.out.println(e.getKeyChar());
        System.out.println(e);
    }



    public void actionPerformed(ActionEvent e) {
        JLabel l;

        /* Change image selected terrain or building and its Value in mapLogic */
        for (int i=0;i<selected.size();++i) {
            l = selected.get(i);
            int n = Map.GetContentNumber(e.getActionCommand());

            if (!mapLogic.IsCastle(n) || !mapLogic.IsCastleIn(n)) {
                l.setIcon(ImageSupport.createImageIcon(e.getActionCommand()+".png", null));
                Point gridpoint = Converter.PointToGrid(l.getX(), l.getY());
                mapLogic.SetContent(gridpoint.x, gridpoint.y, Map.GetContentNumber(e.getActionCommand()));
            }

            /* Remove border selected Label */
            l.setBorder(null);
        }

        /* Remove All Label from selected List */
        selected.clear();
    }

    public void ShowWindow() {
        isFullScreen = device.isFullScreenSupported();
        setUndecorated(isFullScreen);
        setResizable(!isFullScreen);
        Container pane = getContentPane();
        if (isFullScreen) {
            /* Full-screen mode */
            device.setFullScreenWindow(this);
            validate();
            pane.setLayout(null);
            pane.add(getLayerpane());
            getLayerpane().setBounds(0, 0, getWidth(), getHeight());
            getLayerpane().setLayout(null);
            getScroll().setBounds(0, 0, getWidth(), getHeight());
            getChangeterrainPanel().setBounds(0, getHeight()-getChangeterrainPanel().getHeight(), getChangeterrainPanel().getWidth(), getChangeterrainPanel().getHeight());
        } else {
            /* Windowed mode */
            pack();
            setVisible(true);
        }
        setBackground(Color.BLACK);
        pane.setBackground(Color.BLACK);
        getLayerpane().setBackground(Color.BLACK);
    }

    public void createContent(int x, int y, int width, int height, String iconName) {
        JLabel label = new JLabel(ImageSupport.createImageIcon(iconName+".png", null));
        label.setBounds(x, y, width, height);
        getContentPanel().add(label);
    }

    public void paintMap() {
        /* Remove all component in content Panel */
        getContentPanel().removeAll();
        getContentPanel().repaint();

        /* Add new component(terrain & building ) in content Panel */
        for (int i=0;i<mapLogic.GetWidth();++i) {
            for (int j=0;j<mapLogic.GetHeight();++j) {
                createContent(i*ImageSupport.IMAGE_WIDTH, j*ImageSupport.IMAGE_HEIGHT, ImageSupport.IMAGE_WIDTH, ImageSupport.IMAGE_HEIGHT, Map.GetString(mapLogic.GetContent(i, j)));
            }
        }
        getContentPanel().repaint();

        /* Set new Size for contentPanel */
        Dimension d = new Dimension(ImageSupport.IMAGE_WIDTH*mapLogic.GetWidth(), ImageSupport.IMAGE_HEIGHT*mapLogic.GetHeight());
        getContentPanel().setPreferredSize(d);
    }

    public Map GetMap() {
        return mapLogic;
    }

    public void SetMap(Map map) {
        mapLogic = map;
    }

    public void SetMapName(String mapName) {
        this.mapName = mapName;
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Load;
    private javax.swing.JButton airButton;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton castle1Button;
    private javax.swing.JButton castle2Button;
    private javax.swing.JButton castle3Button;
    private javax.swing.JButton castle4Button;
    private javax.swing.JPanel changeterrainPanel;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton deselectButton;
    private javax.swing.JLayeredPane layerpane;
    private javax.swing.JButton lumpurButton;
    private javax.swing.JButton newButton;
    private javax.swing.JButton pohonButton;
    private javax.swing.JButton randomButton;
    private javax.swing.JButton rumputButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JButton selectAllButton;
    // End of variables declaration//GEN-END:variables

    private MainMenu parent;
    private GraphicsDevice device;
    private boolean isFullScreen;
    private ArrayList<JLabel> selected = new ArrayList<JLabel>();
    private Map mapLogic;
    private String mapName = null;
    private SaveMapPanel save;
    private LoadMapPanel load;
    private NewPanel New;

    public static final int PANEL_LAYER = 2;

    /**
     * @return the contentPanel
     */
    public javax.swing.JPanel getContentPanel() {
        return contentPanel;
    }

    /**
     * @return the changeterrainPanel
     */
    public javax.swing.JPanel getChangeterrainPanel() {
        return changeterrainPanel;
    }

    /**
     * @return the layerpane
     */
    public javax.swing.JLayeredPane getLayerpane() {
        return layerpane;
    }

    /**
     * @return the scroll
     */
    public javax.swing.JScrollPane getScroll() {
        return scroll;
    }
}
